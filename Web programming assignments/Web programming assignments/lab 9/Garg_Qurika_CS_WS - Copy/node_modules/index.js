const noteData = require("./file.json");


let currId = 0;
let todoListEntries = {};

let makeToDo = function (title, dueDate, summary, body)
{
    if (!title) throw "Must provide a title";
    if (!dueDate) throw "Must provide a dueDate";
    if (!summary) throw "Must provide a summary";
    if (!body) throw "Must provide a body";

    let newTask = { id: ++currId, title: title, task: task, done: false };

    todoListEntries[newTask.id] = newTask;
    return newTask;
};

let getToDo = function (id) {
    if (!todoListEntries[id]) throw "No such entry exists";
    return todoListEntries[id];
};

let finishToDo = function (id) {
    let entry = getToDo(id);
    entry.done = true;

    return entry;
};

let updateToDo = function (id, newTitle, newTask) {
    let entry = getToDo(id);
    if (newTitle) entry.title = newTitle;
    if (newTask) entry.task = newTask;

    return entry;
};

let getAll = function () {
    return Object.keys(todoListEntries).map(function (key) {
        return todoListEntries[key];
    });
};

let getFinished = function () {
    return getAll().filter(function (entry) {
        return entry.done;
    });
};

let getUnfinished = function () {
    return getAll().filter(function (entry) {
        return !entry.done;
    });
};

function getFileAsJSON(path)
{    
 return new Promise((fulfill, reject) => {
                if(!path) reject("Please provide correct path");
                fs.readFile(path,"utf-8",(error, data)=>{
                    if(error) reject(error);
                    try{
                        var fileObject=JSON.parse(data);
                    } catch(error){
                        reject(error);
                    }
                    fulfill(fileObject);
                });
              });
}

function comp(a, b) {
    return new Date(a.date).getTime() - new Date(b.date).getTime();
}
module.exports = {
    getToDo: getToDo,
    finishToDo: finishToDo,
    updateToDo: updateToDo,
    getAll: getAll,
    getFinished: getFinished,
    getUnfinished: getUnfinished,
    makeToDo: makeToDo,
    getFileAsJSON:getFileAsJSON,
    comp:comp
};

module.exports.makeToDo("Finish ToDo List", "You should finish this list");